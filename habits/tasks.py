from celery import shared_task
from django.utils import timezone
from datetime import datetime
import requests
from django.conf import settings
from .models import Habit


@shared_task
def send_telegram_reminder():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ Telegram –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö"""
    now = timezone.now()
    current_time = now.time()

    # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    habits = Habit.objects.filter(
        time__hour=current_time.hour,
        time__minute=current_time.minute
    ).select_related('user')

    for habit in habits:
        if habit.user.telegram_chat_id:
            send_habit_reminder.delay(habit.id)


@shared_task
def send_habit_reminder(habit_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–µ"""
    try:
        habit = Habit.objects.select_related('user').get(id=habit_id)
    except Habit.DoesNotExist:
        return

    if not habit.user.telegram_chat_id:
        return

    message = format_reminder_message(habit)
    send_telegram_message.delay(habit.user.telegram_chat_id, message)


@shared_task
def send_telegram_message(chat_id, message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    bot_token = settings.TELEGRAM_BOT_TOKEN
    if not bot_token:
        return

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"

    payload = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'HTML'
    }

    try:
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status()
        return True
    except requests.RequestException:
        return False


def format_reminder_message(habit):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    reward_text = ""
    if habit.reward:
        reward_text = f"\nüéÅ –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: {habit.reward}"
    elif habit.related_habit:
        reward_text = f"\nüí´ –ü—Ä–∏—è—Ç–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞: {habit.related_habit.action}"

    return (
        f"üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ!</b>\n\n"
        f"üìù –î–µ–π—Å—Ç–≤–∏–µ: {habit.action}\n"
        f"üìç –ú–µ—Å—Ç–æ: {habit.place}\n"
        f"‚è∞ –í—Ä–µ–º—è: {habit.time.strftime('%H:%M')}\n"
        f"‚è±Ô∏è –í—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {habit.time_to_complete} —Å–µ–∫—É–Ω–¥"
        f"{reward_text}\n\n"
        f"–£–¥–∞—á–∏! üí™"
    )